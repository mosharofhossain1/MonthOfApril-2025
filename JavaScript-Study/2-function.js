/* ЁЯза Function ржХрзА?
ЁЯСЙ Function рж╣рж▓рзЛ тАФ ржПржХржЯрж┐ ржирж╛ржо ржжрзЗржУрзЯрж╛ ржХрзЛржб ржмрзНрж▓ржХ
ржпрзЗржЯрж╛ ржпржЦржиржЗ ржжрж░ржХрж╛рж░ рждржЦржи ржбрж╛ржХрж▓рзЗржЗ ржХрж╛ржЬ ржХрж░ржмрзЗред

ЁЯУв рж╕рж╣ржЬ ржнрж╛рж╖рж╛рзЯ:

рждрзБржорж┐ ржПржХржмрж╛рж░ ржХрзЛржб рж▓рж┐ржЦржмрзЗ, ржмрж╛рж░ржмрж╛рж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗред
ржПрждрзЗ рждрзЛржорж╛рж░ рж╕ржорзЯ ржУ ржХрзЛржб ржжрзБржЯрзЛржЗ ржмрж╛ржБржЪрзЗ! */

//ЁЯФе Function ржПрж░ ржЧржаржи (Syntax)

function functionName() {
    // ржПржЦрж╛ржирзЗ рждрзЛржорж╛рж░ ржХрзЛржб рж▓рж┐ржЦржмрзЗ
}

//ЁЯСЙ ржпржЦржи рждрзЛржорж╛рж░ ржжрж░ржХрж╛рж░ рж╣ржмрзЗ, рждржЦржи рж╢рзБржзрзБ ржирж╛ржо рж▓рж┐ржЦрзЗ call ржХрж░ржмрзЗ:

functionName();


//тЬЕ ржЙржжрж╛рж╣рж░ржг рззржГ рж╕рж╛ржзрж╛рж░ржг Function

function sayHello() {
    console.log('Hello Function');

}
sayHello();


/* тЬЕ ржЙржжрж╛рж╣рж░ржг рзиржГ Parameter ржУ Argument рж╕рж╣ Function
ЁЯСЙ ржпржЦржи рждрзЛржорж╛рж░ function-ржПрж░ ржоржзрзНржпрзЗ ржбрзЗржЯрж╛ ржкрж╛ржарж╛рждрзЗ ржЪрж╛ржУ рждржЦржи parameter ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред */

function greet(name) {
    console.log('Hello', + name + '!')
}
greet('Rohim');
greet('Korim');


/* тЬЕ ржЙржжрж╛рж╣рж░ржг рзйржГ Return Statement рж╕рж╣ Function
ЁЯСЙ Function ржХрзЛржирзЛ ржорж╛ржи (value) рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рждрзЗ ржкрж╛рж░рзЗред */
function add(a, b) {
    return a + b;
}
let result = add(4, 6);
console.log(result);


/* ЁЯТб Function ржмрзНржпржмрж╣рж╛рж░ ржХрзЗржи ржЬрж░рзБрж░рж┐?
тЬЕ ржХрзЛржб ржХржо рж▓рж┐ржЦрждрзЗ рж╣рзЯред
тЬЕ ржПржХржЗ ржХрж╛ржЬ ржмрж╛рж░ржмрж╛рж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржпрж╛рзЯред
тЬЕ ржХрзЛржб рж╕рзБржирзНржжрж░ ржУ рж╕рж╣ржЬ рж╣рзЯред
тЬЕ ржмрзЬ ржкрзНрж░рзЛржЧрзНрж░рж╛ржоржХрзЗ ржЫрзЛржЯ ржЫрзЛржЯ ржнрж╛ржЧрзЗ ржЖрж▓рж╛ржжрж╛ ржХрж░рж╛ ржпрж╛рзЯред */

/* ЁЯза Function Declaration (ржШрзЛрж╖ржгрж╛ ржХрж░рж╛ ржлрж╛ржВрж╢ржи)
ржПржЯрж╛ рж╣ржЪрзНржЫрзЗ рж╕ржмржЪрзЗрзЯрзЗ рж╕рж╣ржЬ ржПржмржВ ржХрзНрж▓рж╛рж╕рж┐ржХ ржкржжрзНржзрждрж┐ тАФ
ржлрж╛ржВрж╢ржи ржЖржЧрзЗ ржерзЗржХрзЗ define ржХрж░рзЗ рж░рж╛ржЦрж╛ рж╣рзЯ, ржкрж░рзЗ ржкрзНрж░рзЯрзЛржЬржи рж╣рж▓рзЗ ржпрзЗржХрзЛржирзЛ ржЬрж╛рзЯржЧрж╛ ржерзЗржХрзЗ call ржХрж░рж╛ ржпрж╛рзЯред */

function functionName(parameters) {
    // ржХрж╛ржЬрзЗрж░ ржХрзЛржб
}

/* ЁЯСЙ ржмрж┐рж╢рзЗрж╖ ржмрзИрж╢рж┐рж╖рзНржЯрзНржп:

ржлрж╛ржВрж╢ржи declaration hoisting рж╣рзЯред

ржЕрж░рзНржерж╛рзО ржлрж╛ржВрж╢ржи ржЙржкрж░рзЗрж░ ржжрж┐ржХрзЗржЗ ржЪрж▓рзЗ ржпрж╛рзЯ, рждрж╛ржЗ call ржХрж░рж╛рж░ рж╕ржорзЯ ржлрж╛ржВрж╢ржирзЗрж░ ржЙржкрж░рзЗ ржмрж╛ ржирж┐ржЪрзЗ рж░рж╛ржЦрж╛ ржпрж╛рзЯред */

sayHi();

function sayHi() {
    console.log("Hi!");
}

/* ЁЯза Function Expression (ржПржХрзНрж╕ржкрзНрж░рзЗрж╢ржи ржлрж╛ржВрж╢ржи)
ржПржХрзНрж╖рзЗрждрзНрж░рзЗ ржлрж╛ржВрж╢ржиржХрзЗ ржХрзЛржирзЛ ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓рзЗрж░ ржоржзрзНржпрзЗ рж░рзЗржЦрзЗ define ржХрж░рж╛ рж╣рзЯред
ржлрж╛ржВрж╢ржи ржирж╛ржо ржерж╛ржХрж╛ ржмрж╛ ржирж╛ ржерж╛ржХрждрзЗржУ ржкрж╛рж░рзЗред */
const functionName = function (parameters) {
    // ржХрж╛ржЬрзЗрж░ ржХрзЛржб
}

const greet = function (name) {
    console.log("Hello, " + name + "!");
}

greet("Karim");  // Output: Hello, Karim!

/* ЁЯСЙ ржмрж┐рж╢рзЗрж╖ ржмрзИрж╢рж┐рж╖рзНржЯрзНржп:

ржлрж╛ржВрж╢ржи expression hoisting рж╣рзЯ ржирж╛ред

ржЕрж░рзНржерж╛рзО, ржбрж┐ржХрзНрж▓рзЗрзЯрж╛рж░ ржХрж░рж╛рж░ ржЖржЧрзЗ call ржХрж░рж▓рзЗ Error ржжрзЗржЦрж╛ржмрзЗред */

greet("Rahim");  // тЭМ Error!

const greet = function (name) {
    console.log("Hello, " + name + "!");
}


/* ЁЯза Arrow Function ржХрзА?
ЁЯСЙ Arrow Function рж╣ржЪрзНржЫрзЗ JavaScript-ржП Function Expression рж▓рзЗржЦрж╛рж░ рж╢рж░рзНржЯржХрж╛ржЯ ржПржмржВ рж╕рзБржирзНржжрж░ржнрж╛ржмрзЗ ржлрж╛ржВрж╢ржи рж▓рзЗржЦрж╛рж░ ржкржжрзНржзрждрж┐ред

ES6 (ECMAScript 2015) ржП ржПржЯрж┐ ржпрзБржХрзНржд рж╣рзЯред
ржЖрж░ржУ ржХржо ржХрзЛржб рж▓рж┐ржЦрзЗ, ржкрж░рж┐рж╖рзНржХрж╛рж░ ржУ ржжрзНрж░рзБржд ржлрж╛ржВрж╢ржи рждрзИрж░рж┐ ржХрж░рж╛ ржпрж╛рзЯред */

//ЁЯТб Arrow Function ржПрж░ Basic Syntax

const functionName = (parameters) => {
    console.log('Code Here');
}

/* тЬЕ ржЙржжрж╛рж╣рж░ржг рззржГ рж╕рж╛ржзрж╛рж░ржи ржлрж╛ржВрж╢ржи ржХрзЗ Arrow ржлрж╛ржВрж╢ржи ржП рж░рзВржкрж╛ржирзНрждрж░ */
//ЁЯСЙ рж╕рж╛ржзрж╛рж░ржгржнрж╛ржмрзЗ ржлрж╛ржВрж╢ржи:
function greet(name) {
    return "Hello, " + name + "!";
}

//ЁЯСЙ Arrow Function ржП рж░рзВржкрж╛ржирзНрждрж░:
const greet = (name) => {
    return 'Hello' + name + '!'
}

/* тЬЕ ржЙржжрж╛рж╣рж░ржг рзиржГ Return ржПржХ рж▓рж╛ржЗржирзЗ (Short Syntax)
ржпржжрж┐ ржлрж╛ржВрж╢ржи рж╢рзБржзрзБ return ржХрж░рзЗ, рждрж╛рж╣рж▓рзЗ {} ржУ return рж▓рзЗржЦрж╛рж░ ржжрж░ржХрж╛рж░ ржирзЗржЗред */


const greet = (name) => 'Hello' + name + '!';
console.log(greet("Rahim"));  // Output: Hello, Rahim!

//тЬЕ ржЙржжрж╛рж╣рж░ржг рзйржГ ржжрзБржЗржЯрж┐ ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░
const add = (a, b) => a + b;
console.log(add(5, 3));  // Output: 8

//тЬЕ ржЙржжрж╛рж╣рж░ржг рзкржГ ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ ржирж╛ ржерж╛ржХрж▓рзЗ
const sayHello = () => "Hello, World!";
console.log(sayHello());  // Output: Hello, World!


/* ЁЯТб Return Statement ржХрзА?
ЁЯСЙ return рж╣ржЪрзНржЫрзЗ ржПржоржи ржПржХржЯрж┐ keyword, ржпрзЗржЯрж╛ function ржерзЗржХрзЗ ржХрзЛржи ржорж╛ржи (value) ржмрзЗрж░ ржХрж░рзЗ ржжрзЗрзЯред
ржпржЦржи ржХрзЛржирзЛ ржлрж╛ржВрж╢ржи return ржкрж╛рзЯ, рждржЦржи ржлрж╛ржВрж╢ржи рж╕рзЗржЗ ржорж╛ржи ржлрзЗрж░ржд ржжрзЗрзЯ, ржПржмржВ ржлрж╛ржВрж╢ржирзЗрж░ ржХрж╛ржЬ рж╕рзЗржЦрж╛ржирзЗржЗ ржерзЗржорзЗ ржпрж╛рзЯред */

//ЁЯза Syntax (ржЧржаржи):
function functionName(parameters) {
    return ржорж╛ржи;
}

//тЬЕ ржЙржжрж╛рж╣рж░ржг рззржГ рж╕рж╛ржзрж╛рж░ржг Return
function add(a, b) {
    return a + b;
}

let result1 = add(5, 3);
console.log(result1);  // Output: 8

//тЬЕ ржЙржжрж╛рж╣рж░ржг рзиржГ Return ржЫрж╛рзЬрж╛ ржлрж╛ржВрж╢ржи
function greet(name) {
    console.log("Hello, " + name);
}

let result2 = greet("Rahim");
console.log(result2);  // Output: undefined

//тЬЕ ржЙржжрж╛рж╣рж░ржг рзйржГ Return ржорж╛ржи ржкрзЗрж▓рзЗржЗ ржлрж╛ржВрж╢ржи ржерзЗржорзЗ ржпрж╛рзЯ

function test() {
    return "ржПржЗржЯрж╛ рж░рж┐ржЯрж╛рж░рзНржи рж╣ржмрзЗ";
    console.log("ржПржЗ рж▓рж╛ржЗржи ржЖрж░ ржЪрж▓ржмрзЗ ржирж╛!");
}

console.log(test());  // Output: ржПржЗржЯрж╛ рж░рж┐ржЯрж╛рж░рзНржи рж╣ржмрзЗ


/* ЁЯТб Return ржХрзЗржи ржжрж░ржХрж╛рж░?
тЬЕ ржлрж╛ржВрж╢ржирзЗрж░ ржмрж╛ржЗрж░рзЗ ржХрзЛржирзЛ ржорж╛ржи ржкрж╛ржарж╛рждрзЗред
тЬЕ ржЧржгржирж╛ ржХрж░рзЗ ржлрж▓рж╛ржлрж▓ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рждрзЗред
тЬЕ ржлрж╛ржВрж╢ржиржХрзЗ ржЕржирзНржп ржлрж╛ржВрж╢ржирзЗрж░ рж╕рж╛ржерзЗ рж╕ржВржпрзЛржЧ ржХрж░рждрзЗред
тЬЕ reusable logic рждрзИрж░рж┐ ржХрж░рждрзЗред */

function multiple(a, b) {
    return a * b
}

const multiResult = multiple(4, 3);
console.log(multiResult);

